//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Attractions
{
    using System;
    using System.Collections.Generic;
    
    public partial class Entertainment
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Entertainment()
        {
            this.Favorites = new HashSet<Favorites>();
            this.Reviews = new HashSet<Reviews>();
            this.Schedule = new HashSet<Schedule>();
        }
    
        public int EntertainmentId { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public int CategoryId { get; set; }
        public int FilterId { get; set; }
        public decimal Price { get; set; }
        public int Duration { get; set; }
        public int MinAge { get; set; }
        public Nullable<int> MaxParticipants { get; set; }
        public string ImageUrl { get; set; }
    
        public virtual Categories Categories { get; set; }
        public virtual Filters Filters { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Favorites> Favorites { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Reviews> Reviews { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Schedule> Schedule { get; set; }
        public string CurrentPhoto
        {
            get
            {
                if (String.IsNullOrEmpty(ImageUrl) || String.IsNullOrWhiteSpace(ImageUrl))
                {
                    return "/Images/picture.jpg";
                }
                else
                {
                    return "/Images/" + ImageUrl;
                }
            }
        }
    }
}
